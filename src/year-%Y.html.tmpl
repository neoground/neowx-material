#encoding UTF-8
## +-------------------------------------------------------------------------+
## |    year-%Y.html.tmpl         Template file for "yearly archive" page    |
## +-------------------------------------------------------------------------+

#attr $active_nav = 'archive'

## +-------------------------------------------------------------------------+
## | Template for display card of values (left column)                       |
## +-------------------------------------------------------------------------+

#def valuesCard($name)
  #if $getVar('year.' + name + '.has_data')
  <div class="col-12 col-lg-6 mb-4">
    <div class="card">
      <div class="card-body text-center">
        <h3 class="h5-responsive $Extras.color-text">
          $getVar('obs.label.' + name)
          #if $name == 'windSpeed'

            <i class="wi wi-wind from-$year.windDir.avg.formatted-deg"
               title="$year.windDir.avg.formatted°" data-toggle="tooltip"></i>

          #end if
        </h3>

        #if $name == 'windSpeed'

        <div class="row">
          <div class="col-3 text-muted font-small">
            $year.wind.avg <br>
            $Extras.Translations[$Extras.language].avg
          </div>
          <div class="col-6">
            <h4 class="h2-responsive">
              $year.windSpeed.max $year.windDir.avg.ordinal_compass
            </h4>
          </div>
          <div class="col-3 text-muted font-small hi-text">
            $year.wind.max $year.wind.gustdir.ordinal_compass <br>
            <i class="wi wi-wind from-$year.wind.gustdir.formatted-deg mr-2"
               title="$year.wind.gustdir.formatted°" data-toggle="tooltip"></i>
            ($year.wind.maxtime.format($Extras.Formatting.datetime_archive))
          </div>
        </div>

        #else if $name == 'rain'

        <div class="row">
          <div class="col-3 text-muted font-small">

          </div>
          <div class="col-6">
            <h4 class="h2-responsive">$year.rain.sum</h4>
          </div>
          <div class="col-3 text-muted font-small hi-text">
            $year.rainRate.max <br>
            ($year.rainRate.maxtime.format($Extras.Formatting.datetime_archive))
          </div>
        </div>

        #else

        <div class="row">
          <div class="col-3 text-muted font-small lo-text">
            $getVar('year.' + name + '.min') <br>
            ($getVar('year.' + name + '.mintime').format($Extras.Formatting.datetime_archive))
          </div>
          <div class="col-6">
            <h4 class="h2-responsive">$getVar('year.' + name + '.avg')</h4>
          </div>
          <div class="col-3 text-muted font-small hi-text">
            $getVar('year.' + name + '.max') <br>
            ($getVar('year.' + name + '.maxtime').format($Extras.Formatting.datetime_archive))
          </div>
        </div>

        #end if

      </div>
    </div>
  </div>
  #end if
#end def

## +-------------------------------------------------------------------------+
## | Template for display card of a single chart (right column)              |
## | Chart values are defined in the JS section below                        |
## +-------------------------------------------------------------------------+

#def chartCard($name, $id, $name2 = "XX")
  #if ($getVar('year.' + name + '.has_data') or $name == "windvec") and $name != "appTemp"
    <div class="col-12 col-xl-6 mb-4">
      <div class="card">
        <div class="card-body text-center">
          <h5 class="h5-responsive $Extras.color-text">
            #if $name2 != "XX"
              $getVar('Extras.Charts.Titles.' + name, $getVar('obs.label.' + name)) &
              $getVar('Extras.Charts.Titles.' + name2, $getVar('obs.label.' + name2))
            #else
              $getVar('Extras.Charts.Titles.' + name, $getVar('obs.label.' + name))
            #end if
          </h5>
          <div id="$id"></div>
        </div>
      </div>
    </div>
  #end if
#end def

## +-------------------------------------------------------------------------+
## | The main page layout                                                    |
## +-------------------------------------------------------------------------+

<!DOCTYPE html>
<html lang="$Extras.language">
<head>
  <title>
      $Extras.Translations[$Extras.language].year $year_name | $station.location
  </title>
  #include "head.inc"
</head>
<body class="${Extras.Appearance.mode}-theme main-bg" ontouchstart="">

#include "header.inc"

<main>
  <div class="container-fluid d-flex-xxl">

    <div class="row my-4 temprow align-content-start">

      <div class="col-12 mb-4 text-center">
        <h2 class="h2-responsive text-dark">$Extras.Translations[$Extras.language].year $year_name</h2>
      </div>

      #for $month in $year.months
        <div class="col-12 col-lg-6 mb-4 text-center">
          <div class="card">
            <div class="card-body">
              <h4 class="h4-responsive $Extras.color-text">$month.dateTime.format("%B")</h4>
              <div class="row text-dark my-2">
                <div class="col-4">
                    <i class="wi wi-thermometer h5-responsive"></i><br>
                    $month.outTemp.min<br>$month.outTemp.max
                </div>
                <div class="col-4">
                  <i class="wi wi-strong-wind h5-responsive"></i><br>
                  $month.wind.max<br>
                  $month.windDir.avg.ordinal_compass
                  <i class="wi wi-wind from-$month.windDir.avg.formatted-deg mr-2"
                     title="$month.windDir.avg.formatted°" data-toggle="tooltip"></i>
                </div>
                <div class="col-4">
                  <i class="wi wi-showers h5-responsive"></i><br>
                  $month.rain.sum
                </div>
              </div>
              <div class="row d-flex align-items-center">
                <div class="col-6">
                  <a href="month-${year_name}-${month.dateTime.format('%m')}.html"
                     class="btn btn-$Extras.color btn-block">
                     $Extras.Translations[$Extras.language].more
                  </a>
                </div>
                <div class="col-6">
                  <a href="archive/NOAA-${year_name}-${month.dateTime.format('%m')}.txt"
                     class="btn btn-primary btn-block">
                     $Extras.Translations[$Extras.language].noaa_export
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
        #end for

    </div>

    <hr class="my-4 rowdivider">

    <div class="row mt-5 mb-4 graphrow align-content-start">
      #for $x in $Extras.Appearance.values_order

      #if $x == "ET"
        #if $year.ET.has_data and $year.ET.sum.raw != None and $year.ET.sum.raw > 0.0
          $valuesCard('ET')
        #end if
      #else
        $valuesCard($x)
      #end if

      #end for

      <div class="col-12 mt-2 mb-4">
        <hr>
      </div>

      #for $x in $Extras.Appearance.charts_order

      #if $x == "ET"
        #if $year.ET.has_data and $year.ET.sum.raw != None and $year.ET.sum.raw > 0.0
          $chartCard($x, $x + 'chart')
        #end if
      #else
        $chartCard($x, $x + 'chart')
      #end if

      #end for
    </div>

  </div>
</main>

#include "footer.inc"
#include "js.inc"

## +-------------------------------------------------------------------------+
## | Chart generation methods (get data for charts + their JS code)          |
## +-------------------------------------------------------------------------+

## +-------------------------------------------------------------------------+
## | Get data array for a chart                                              |
## |                                                                         |
## | string  $name    the name of the database field  (e.g. outTemp)         |
## | string  $column  the column of the display value (e.g. min, max, avg)   |
## +-------------------------------------------------------------------------+

#def getChartData($name, $column)
  #for $record in $year.days
    #try
      #set val = $getattr($record, $name)
      #set data = $getattr($val, $column).format(add_label=False, localize=False, None_string="null")
      [$record.start.raw, $data],
    #except

    #end try
  #end for
#end def

## +-------------------------------------------------------------------------+
## | Get JavaScript code for a chart                                         |
## |                                                                         |
## | string  $name     the name of the database field   (e.g. outTemp)       |
## | string  $id       the ID of the chart target       (without hash)       |
## | string  $type     type of chart                    (area, bar, radar)   |
## | string  $series1  field name for (1st) series      (e.g. outTemp)       |
## | string  $series2  opt. field name for 2nd series   (e.g. outTemp or "") |
## | string  $column   the column of the display value  (e.g. min, max, avg) |
## | string  $series3  opt. field name for 3rd series   (e.g. outTemp or "") |
## | string  $series4  opt. field name for 4th series   (e.g. outTemp or "") |
## +-------------------------------------------------------------------------+

#def getChartJsCode($name, $id, $type, $series1, $series2 = "", $column = "avg", $series3 = "", $series4 = "")

## Only add JS chart code if in array
#if $name in $Extras.Appearance.charts_order

#if $series1 == "outTemp"

## Special diagram for outside temp

new ApexCharts(document.querySelector('#$id'), {
  ...graph_${type}_config,
  yaxis: {
    labels: {
      formatter: function (val) {
        return formatNumber(val, "$getVar('unit.format.' + name)") + "$getVar('unit.label.' + name)";
      }
    }
  },
  series: [
    {
      name: "$getVar('obs.label.' + series1) $Extras.Translations[$Extras.language].min",
      data: [ $getChartData(series1, 'min') ]
    },
    {
      name: "$getVar('obs.label.' + series1) $Extras.Translations[$Extras.language].max",
      data: [ $getChartData(series1, 'max') ]
    }
    #if $series2 != "" and $getVar('year.' + series2 + '.has_data')
    ,{
      name: "$getVar('obs.label.' + series2)",
      data: [ $getChartData(series2, column) ]
    }
    #end if
    #if $series3 != "" and $getVar('year.' + series3 + '.has_data')
    ,{
      name: "$getVar('obs.label.' + series3)",
      data: [ $getChartData(series3, column) ]
    }
    #end if
    #if $series4 != "" and $getVar('year.' + series4 + '.has_data')
    ,{
      name: "$getVar('obs.label.' + series4)",
      data: [ $getChartData(series4, column) ]
    }
    #end if
  ]
}).render()

#else

new ApexCharts(document.querySelector('#$id'), {
  ...graph_${type}_config,
  yaxis: {
    labels: {
      formatter: function (val) {
        return formatNumber(val, "$getVar('unit.format.' + name)") + "$getVar('unit.label.' + name)";
      }
    }
  },
  series: [
    {
      name: "$getVar('obs.label.' + series1)",
      data: [ $getChartData(series1, column) ]
    }
    #if $series2 != "" and $getVar('year.' + series2 + '.has_data')
    ,{
      name: "$getVar('obs.label.' + series2)",
      data: [ $getChartData(series2, column) ]
    }
    #end if
    #if $series3 != "" and $getVar('year.' + series3 + '.has_data')
    ,{
      name: "$getVar('obs.label.' + series3)",
      data: [ $getChartData(series3, column) ]
    }
    #end if
    #if $series4 != "" and $getVar('year.' + series4 + '.has_data')
    ,{
      name: "$getVar('obs.label.' + series4)",
      data: [ $getChartData(series4, column) ]
    }
    #end if
  ]
}).render()

#end if

#end if

#end def

## +-------------------------------------------------------------------------+
## | Chart definitions                                                       |
## +-------------------------------------------------------------------------+

<script type="text/javascript">
  // Config templates

  var graph_area_config = {
    #include "graph_area_archive_config.inc"
  }
  var graph_bar_config = {
    #include "graph_bar_archive_config.inc"
  }

  var graph_radar_config = {
    #include "graph_radar_config.inc"
  }

  // outTemp + Dewpoint
  $getChartJsCode("outTemp", "outTempchart", "area", "outTemp", "dewpoint")

  // Wind chill + Heat index + optional appTemp
  #if "appTemp" in $Extras.Appearance.charts_order and $year.appTemp.has_data
  $getChartJsCode("windchill", "windchillchart", "area", "windchill", "heatindex", "avg", "appTemp")
  #else
  $getChartJsCode("windchill", "windchillchart", "area", "windchill", "heatindex")
  #end if

  // Barometer
  $getChartJsCode("barometer", "barometerchart", "area", "barometer")

  // Rain
  $getChartJsCode("rain", "rainchart", "bar", "rain", "", "sum")

  // Wind
  $getChartJsCode("windSpeed", "windSpeedchart", "area", "windSpeed", "windGust", "max")

  // outHumidity
  $getChartJsCode("outHumidity", "outHumiditychart", "area", "outHumidity")

  // UV / ET / Radiation
  #if $year.UV.has_data
  $getChartJsCode("UV", "UVchart", "area", "UV", "", "max")
  #end if

  #if $year.ET.has_data and $year.ET.sum.raw != None and $year.ET.sum.raw > 0.0
  $getChartJsCode("ET", "ETchart", "area", "ET", "", "max")
  #end if

  #if $year.radiation.has_data
  $getChartJsCode("radiation", "radiationchart", "area", "radiation", "", "max")
  #end if

  // inTemp + inHumidity
  $getChartJsCode("inTemp", "inTempchart", "area", "inTemp")
  $getChartJsCode("inHumidity", "inHumiditychart", "area", "inHumidity")
  
  // Other sensors
  #if $year.snowDepth.has_data
  $getChartJsCode("snowDepth", "snowDepthchart", "bar", "snowDepth", "", "sum")
  #end if

  #if $year.leafTemp1.has_data or $year.leafTemp2.has_data
  $getChartJsCode("leafTemp", "leafTempchart", "area", "leafTemp1", "leafTemp2", "avg")
  #end if

  #if $year.soilTemp1.has_data or $year.soilTemp2.has_data
  $getChartJsCode("soilTempA", "soilTempAchart", "area", "soilTemp1", "soilTemp2", "avg")
  #end if

  #if $year.soilTemp3.has_data or $year.soilTemp4.has_data
  $getChartJsCode("soilTempB", "soilTempBchart", "area", "soilTemp3", "soilTemp4", "avg")
  #end if

  #if $year.soilMoist1.has_data or $year.soilMoist2.has_data
  $getChartJsCode("soilMoistA", "soilMoistAchart", "area", "soilMoist1", "soilMoist2", "avg")
  #end if

  #if $year.soilMoist3.has_data or $year.soilMoist4.has_data
  $getChartJsCode("soilMoistB", "soilMoistBchart", "area", "soilMoist3", "soilMoist4", "avg")
  #end if

  #if $year.cloudbase.has_data
  $getChartJsCode("cloudbase", "cloudbasechart", "area", "cloudbase", "avg")
  #end if

  // Build wind vector chart
  var vector_data = {
    'N': {'sum': 0.0, 'amt': 0, 'avg': 0.0, 'max': 0.0},
    'NE': {'sum': 0.0, 'amt': 0, 'avg': 0.0, 'max': 0.0},
    'E': {'sum': 0.0, 'amt': 0, 'avg': 0.0, 'max': 0.0},
    'SE': {'sum': 0.0, 'amt': 0, 'avg': 0.0, 'max': 0.0},
    'S': {'sum': 0.0, 'amt': 0, 'avg': 0.0, 'max': 0.0},
    'SW': {'sum': 0.0, 'amt': 0, 'avg': 0.0, 'max': 0.0},
    'W': {'sum': 0.0, 'amt': 0, 'avg': 0.0, 'max': 0.0},
    'NW': {'sum': 0.0, 'amt': 0, 'avg': 0.0, 'max': 0.0},
  };

  var raw_data = [
  #for $record in $year.days
  {
    'dir': "$record.windDir.avg.raw",
    'speed': "$record.windSpeed.avg.raw",
    'max': "$record.windGust.max.raw"
  },
  #end for
  ];

  raw_data.forEach(function(item) {
    var vec_dir = parseInt(item.dir);
    var vec_speed = parseFloat(item.speed);
    var max_speed = parseFloat(item.max);

    if(typeof vec_dir === 'number') {
      var vec_key = false;

      // Detect key based on vec direction (0-360). 45° steps, using the middle +- 45/2=22.5
      if(vec_dir > 337.5 || vec_dir <= 22.5) {
        vec_key = 'N';
      }
      if(vec_dir > 22.5 && vec_dir <= 67.5) {
        vec_key = 'NE';
      }
      if(vec_dir > 67.5 && vec_dir <= 112.5) {
        vec_key = 'E';
      }
      if(vec_dir > 112.5 && vec_dir <= 157.5) {
        vec_key = 'SE';
      }
      if(vec_dir > 157.5 && vec_dir <= 202.5) {
        vec_key = 'S';
      }
      if(vec_dir > 202.5 && vec_dir <= 247.5) {
        vec_key = 'SW';
      }
      if(vec_dir > 247.5 && vec_dir <= 292.5) {
        vec_key = 'W';
      }
      if(vec_dir > 292.5 && vec_dir <= 337.5) {
        vec_key = 'NW';
      }

      if(vec_key !== false) {
        vector_data[vec_key]['sum'] += vec_speed;
        vector_data[vec_key]['amt']++;

        if(max_speed > vector_data[vec_key]['max']) {
          vector_data[vec_key]['max'] = max_speed;
        }
      }

    }
  });

  // Finally build arrays for chart
  var avg_values = [];
  var max_values = [];
  Object.keys(vector_data).forEach(function (item) {
    if(vector_data[item]['amt'] > 0) {
      avg_values.push(vector_data[item]['sum'] / vector_data[item]['amt']);
    } else {
      avg_values.push(0);
    }

    max_values.push(vector_data[item]['max'])
  });

  // Display wind vector chart

  new ApexCharts(document.querySelector('#windvecchart'), {
    ...graph_radar_config,
    yaxis: {
      labels: {
        formatter: function (val) {
          return formatNumber(val, "$unit.format.windSpeed") + "$unit.label.windSpeed";
        }
      }
    },
    series: [
      {
        name: "$obs.label.windSpeed",
        data: avg_values
      },
      {
        name: "$obs.label.windGust",
        data: max_values
      },
    ]
  }).render()

  // extraTemp 1-8

  #if $year.extraTemp1.has_data
  $getChartJsCode("extraTemp1", "extraTemp1chart", "area", "extraTemp1")
  #end if

  #if $year.extraTemp2.has_data
  $getChartJsCode("extraTemp2", "extraTemp2chart", "area", "extraTemp2")
  #end if

  #if $year.extraTemp3.has_data
  $getChartJsCode("extraTemp3", "extraTemp3chart", "area", "extraTemp3")
  #end if

  #if $year.extraTemp4.has_data
  $getChartJsCode("extraTemp4", "extraTemp4chart", "area", "extraTemp4")
  #end if

  #if $year.extraTemp5.has_data
  $getChartJsCode("extraTemp5", "extraTemp5chart", "area", "extraTemp5")
  #end if

  #if $year.extraTemp6.has_data
  $getChartJsCode("extraTemp6", "extraTemp6chart", "area", "extraTemp6")
  #end if

  #if $year.extraTemp7.has_data
  $getChartJsCode("extraTemp7", "extraTemp7chart", "area", "extraTemp7")
  #end if

  #if $year.extraTemp8.has_data
  $getChartJsCode("extraTemp8", "extraTemp8chart", "area", "extraTemp8")
  #end if

  // extraHumid 1-8

  #if $year.extraHumid1.has_data
  $getChartJsCode("extraHumid1", "extraHumid1chart", "area", "extraHumid1")
  #end if

  #if $year.extraHumid2.has_data
  $getChartJsCode("extraHumid2", "extraHumid2chart", "area", "extraHumid2")
  #end if

  #if $year.extraHumid3.has_data
  $getChartJsCode("extraHumid3", "extraHumid3chart", "area", "extraHumid3")
  #end if

  #if $year.extraHumid4.has_data
  $getChartJsCode("extraHumid4", "extraHumid4chart", "area", "extraHumid4")
  #end if

  #if $year.extraHumid5.has_data
  $getChartJsCode("extraHumid5", "extraHumid5chart", "area", "extraHumid5")
  #end if

  #if $year.extraHumid6.has_data
  $getChartJsCode("extraHumid6", "extraHumid6chart", "area", "extraHumid6")
  #end if

  #if $year.extraHumid7.has_data
  $getChartJsCode("extraHumid7", "extraHumid7chart", "area", "extraHumid7")
  #end if

  #if $year.extraHumid8.has_data
  $getChartJsCode("extraHumid8", "extraHumid8chart", "area", "extraHumid8")
  #end if

</script>

</body>
</html>
